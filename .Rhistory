mergeData$ranking <- cut2(mergeData$X.1, g=5)
table(mergeData$ranking)
table(summarize(mergeData, X.1=nrow(X.1)))
table(summarize(mergeData, X.1=nrow(X.1))
)
table(mergeData$ranking, mergeData$Income.Group)
table(mergeData$Income.Group, mergeData$ranking, )
table(mergeData$Income.Group, mergeData$ranking)
table(mergeData$Income.Group, mergeData$ranking)
setwd("~/R/cleaning/week4")
setwd("~/R/cleaning/week4")
if (!file.exists("./data")) {
dir.create("./data")
}
siteUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv"
download.file(siteUrl,"./data/housing.csv", "curl")
read.csv("./data/housing.csv")
dat <- read.csv("./data/housing.csv")
names(dat)
names <- names(dat)
strsplit(names, "wgtp")
strsplit(names, "wgtp")[123]
siteUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv"
download.file(siteUrl,"./data/gdp.csv", "curl")
dat <- read.csv("./data/housing.csv")
dat <- read.csv("./data/gdp.csv")
names(dat)
head(dat)
head(dat)
head(dat$Gross.domestic.product.2012)
head(dat$X.3)
dat$X.3
dat$X.3
sub(",", "", dat$X.3)
sub(",*", "", dat$X.3)
gsub(",", "", dat$X.3)
gsub(", | " ", "", dat$X.3)
grep(" [1-9] ", dat$X.3, value=TRUE)
gsub("[, | " "]", "", dat$X.3)
gsub(",", "", dat$X.3)
str_trim(dat$X.3)
library(stringr)
str_trim(dat$X.3)
dat$X.3 <- gsub(",", "", dat$X.3)
dat$X.3 <- str_trim(dat$X.3)
mean(data$X.3, na.rm=TRUE)
data$X.3
dat$X.3
mean(dat$X.3, na.rm=TRUE)
mean(dat$X.3, na.rm=FALSE)
datqa$X.3 <- as.numeric(dat$X.3)
mean(dat$X.3, )
mean(dat$X.3)
mean(dat$X.3, na.rm = TRUE)
datqa$X.3 <- as.numeric(dat$X.3)
dat$X.3 <- as.numeric(dat$X.3)
mean(dat$X.3, na.rm = TRUE)
dat$X.3
View(dat)
dat <- read.csv("./data/gdp.csv", skip=4, )
dat <- read.csv("./data/gdp.csv", skip=4)
dat <- dat[1:190, ]
names(dat)
dat$X.3
dat$X.3 <- gsub(",", "", dat$X.3)
dat$X.3 <- str_trim(dat$X.3)
dat$X.3 <- as.numeric(dat$X.3)
mean(dat$X.3, na.rm = TRUE)
dat$X.3
dat <- dat[1:190, ]
names(dat)
dat$X.3
dat <- read.csv("./data/gdp.csv", skip=4)
dat <- dat[1:190, ]
names(dat)
dat$X.3
dat$X.4
dat$X.4 <- gsub(",", "", dat$X.4)
dat$X.4 <- str_trim(dat$X.4)
dat$X.4 <- as.numeric(dat$X.4)
mean(dat$X.4, na.rm = TRUE)
grep("^United", data$X.3), 3
grep("^United", data$X.3)
grep("^United", dat$X.3)
grep("^United", dat$X.3), 3
grep("^United", dat$X.3, value=TRUE)
grep("^United", dat$X.3, value=TRUE), 3
siteUrl <- "https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv"
download.file(siteUrl, "./data/education.csv", "curl")
edu <- read.csv("education.csv")
edu <- read.csv("./data/education.csv")
View(edu)
merge(dat, edu, by=intersect(dat$X, edu$CountryCode))
merge <- merge(dat, edu, by.x=dat$X, by.y=edu$CountryCode))
merge <- merge(dat, edu, by.x=dat$X, by.y=edu$CountryCode)
merge <- merge(dat, edu, by.x = dat$X, by.y = edu$CountryCode)
merge <- merge(dat, edu, by.x = dat$X, by.y = edu$CountryCode)
merge <- merge(dat, edu, by.x = "X", by.y = "CountryCode")
View(merge)
grep("Fiscal year end:", merge$Special.Notes, value=TRUE)
grep("Fiscal year end: June", merge$Special.Notes, value=TRUE)
length(grep("Fiscal year end: June", merge$Special.Notes))
library(quantmod)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
sampleTimes
grep("^2012", sampleTimes)
length(grep("^2012", sampleTimes));
length(grep("2012", sampleTimes));
twelve <-  grep("^2012", sampleTimes, value = TRUE)
twelve
twelve <-  as.Date(grep("^2012", sampleTimes, value = TRUE))
weekdays(twelve)
which(weekdays(twelve) == "Monday")
length(which(weekdays(twelve) == "Monday"))
setwd("~/R/cleaning/assignment")
train <- read.csv("./data/train/X_train.txt")
test <- read.csv("./data/test/X_test.txt")
View(test)
View(train)
View(train)
View(train)
train <- read.table("./data/train/X_train.txt", sep = " ")
train <- read.table("./data/train/X_train.txt")
test <- read.table("./data/test/X_test.txt")
View(test)
dat <- rbind(train, test)
View(dat)
names(dat)
View(test)
colNames <= read.table("./data/features.txt")
colNames <- read.table("./data/features.txt")
View(colNames)
names(dat) <- colNames$V2
View(dat)
grep("mean()", names(dat))
grep("mean() | std()", names(dat))
grep("mean()|std()", names(dat))
grep("mean()|std()", colNames)
# Assign the name of each column
colNames <- read.table("./data/features.txt")
grep("mean()|std()", colNames)
grep("mean()|std()", colNames, value=TRUE)
grep("mean()|std()", colNames, value=TRUE)
grep("mean()|std()", colNames[2], value=TRUE)
grep("mean()|std()", colNames$V2 value=TRUE)
grep("mean()|std()", colNames$V2, value=TRUE)
grep("mean()|std()", colNames$V2)
dat <- dat[, col]
# Get mean and std columns.
ncol <- grep("mean()|std()", names(dat))
dat <- dat[, col]
dat <- dat[, ncol]
# Get mean and std columns.
ncol <- grep("mean|std", names(dat))
dat <- dat[, ncol]
# 1
# Load data from test & train file.
xtrain <- read.table("./data/train/X_train.txt")
ytrain <- read.table("./data/train/y_train.txt")
xtest <- read.table("./data/test/X_test.txt")
ytest <- read.table("./data/test/y_test.txt")
dim(xtrain)
dim(ytrain)
# Merge test & train file.
train <- cbind(xtrain, ytrain)
test <- cbind(xtest, ytest)
dat <- rbind(train, test)
# Merge test & train file.
train <- cbind(ytrain, xtrain)
test <- cbind(ytest, xtest)
dat <- rbind(train, test)
# Merge test & train file.
train <- cbind(xtrain, ytrain)
test <- cbind(xtest, ytest)
dat <- rbind(train, test)
colname <- read.table("./data/features.txt")
ncol <- grep("mean|std", colname$V2)
ncol
dat[, c(meanstdcol, ncol(meanstdcol))]
dat[, c(meanstdcol, ncol(dat))]
meanstdcol <- grep("mean|std", colname$V2)
dat[, c(meanstdcol, ncol(dat))]
dat <- dat[, c(meanstdcol, ncol(dat))]
meanstdcol
length(meanstdcol)
ncol(dat)
dat[, 80]
# 3
# Name activities. (col:80)
dat[,ncol(dat)]
acitivitylabel <- c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
activitylabel
acitivitylabel
label
label <- c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
dat[,ncol(dat)] <-
dat[,ncol(dat)]
dat[,order(ncol(dat))]
dat[,ncol(dat)]
dat[,order(ncol(dat))]
dat <- dat[,order(ncol(dat))]
dat[,ncol(dat)]
dat[,ncol(dat)]
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol, ncol(dat))]
dat <- rbind(train, test)
# 3
# Name activities. (col:80)
dat[,ncol(dat)]
label <- c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
dat <- dat[,order(ncol(dat))]
dat[, ncol(dat)]
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol, ncol(dat))]
# 3
# Name activities. (col:80)
dat[,ncol(dat)]
label <- c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
dat <- dat[order(ncol(dat)),]
dat[, ncol(dat)]
dat <- dat[, c(meanstdcol, ncol(dat))]
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol, ncol(dat))]
# 3
# Name activities. (col:80)
dat[,ncol(dat)]
label <- c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING")
dat <- dat[order(dat[,ncol(dat)]),]
dat[, ncol(dat)]
subset(dat[,ncol(dat)], 1, "WALKING")
subset(dat[,ncol(dat)], dat[,ncol(dat)] == 1, "WALKING")
subset(dat[,ncol(dat)], dat[,ncol(dat)] == 1, dat[,ncol(dat)] <- "WALKING")
dat[, ncol(dat)]
# 3
# Name activities. (col:80)
as.factor(dat[,ncol(dat)])
levels(dat[,ncol(dat)])
level(dat[,ncol(dat)])
# 3
# Name activities. (col:80)
dat[,ncol(dat)] <- as.factor(dat[,ncol(dat)])
level(dat[,ncol(dat)])
levels(dat[,ncol(dat)])
levels(dat[,ncol(dat)]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
levels(dat[,ncol(dat)])
dat[,ncol(dat)]
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol, ncol(dat))]
# 3
# Name activities. (col:80)
dat[,ncol(dat)] <- as.factor(dat[,ncol(dat)])
levels(dat[,ncol(dat)]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
dat[,ncol(dat)]
# 4
# Name variables.
names(dat)
names(dat)[-length(dat)]
names(dat)[-length(dat)] <- grep("mean|std", colname$V2, value = TRUE)
names(dat)
names(dat)[length(dat)] <- "activityName"
names(dat)
names(dat)[-length(dat)] <- sub("^t", "", names(dat)[-length(dat)])
names(dat)[length(dat)] <- "activityName"
names(dat)
dat <- dat[, c(meanstdcol, ncol(dat))]
# 3
# Name activities. (col:80)
dat[,ncol(dat)] <- as.factor(dat[,ncol(dat)])
levels(dat[,ncol(dat)]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
# 4
# Name variables.
names(dat)
names(dat)[-length(dat)] <- grep("mean|std", colname$V2, value = TRUE)
names(dat)[-length(dat)] <- sub("^t", "time", names(dat)[-length(dat)])
names(dat)[-length(dat)] <- sub("^f", "freq", names(dat)[-length(dat)])
names(dat)[length(dat)] <- "activityName"
names(dat)
names(dat) <- sub("mean()", "mean", names(dat))
names(dat)
names(dat) <- sub("mean\(\)", "mean", names(dat))
names(dat)[length(dat)] <- "activityName"
names(dat) <- sub("mean\\(\\)", "mean", names(dat))
names(dat)[length(dat)] <- "activityName"
names(dat)
names(dat) <- sub("\\(.\\)", "", names(dat))
names(dat)[length(dat)] <- "activityName"
names(dat)
names(dat) <- sub("\\(\\)", "", names(dat))
names(dat)[length(dat)] <- "activityName"
names(dat)
# 4
# Assign names of variables.
names(dat)[-length(dat)] <- grep("mean|std", colname$V2, value = TRUE)
# Replace t & f in the first character.
names(dat) <- sub("^t", "time-", names(dat))
names(dat) <- sub("^f", "freq-", names(dat))
# Remove Brackets.
names(dat) <- sub("\\(\\)", "", names(dat))
names(dat)[length(dat)] <- "activityName"
names(dat)
# 5
ave <- colMeans(dat)
# 5
ave <- colMeans(dat, na.rm=TRUE)
# 5
str(dat)
# 1
# Load data from test & train file.
xtrain <- read.table("./data/train/X_train.txt")
ytrain <- read.table("./data/train/y_train.txt")
subjecttrain <- read.table("./data/train/subject_train.txt")
xtest <- read.table("./data/test/X_test.txt")
ytest <- read.table("./data/test/y_test.txt")
subjecttest <- read.table("./data/train/subject_test.txt")
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
subjecttrain <- read.table("./data/train/subject_train.txt")
subjecttest <- read.table("./data/train/subject_test.txt")
subjecttest <- read.table("./data/test/subject_test.txt")
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol, ncol(dat))]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
activitycol
View(dat)
dat[, ncol(dat)]
dat[, activitycol]
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
dat[, ncol(dat)]
dat[activitycol]
dat[,activitycol]
dat[, ncol(dat)]
dat[,activitycol]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
dat[,ncol(dat)] <- as.factor(dat[,activitycol])
levels(dat[,activitycol]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
levels(dat[,activitycol])
levels(dat[, length(dat)])
levels(dat[, ncol(dat)])
# 1
# Load data from test & train file.
xtrain <- read.table("./data/train/X_train.txt")
ytrain <- read.table("./data/train/y_train.txt")
subjecttrain <- read.table("./data/train/subject_train.txt")
xtest <- read.table("./data/test/X_test.txt")
ytest <- read.table("./data/test/y_test.txt")
subjecttest <- read.table("./data/test/subject_test.txt")
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
unique(dat[, ncol(dat)])
unique(dat[, ncol(dat)])
dat <- rbind(train, test)
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
unique(dat[, ncol(dat)])
subjecttrain <- read.table("./data/train/subject_train.txt")
subjecttest <- read.table("./data/test/subject_test.txt")
# Merge test & train file.
train <- cbind(xtrain, ytrain, subjecttrain)
test <- cbind(xtest, ytest, subjecttest)
dat <- rbind(train, test)
unique(dat[, length(dat)])
dat[, length(dat)]
train[, ncol(train)]
test[, ncol(train)]
unique(test[, ncol(train)])
dat <- rbind(train, test)
uniqe(dat[, length(dat)])
unique(dat[, length(dat)])
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
dat[,activitycol] <- as.factor(dat[,activitycol])
levels(dat[,activitycol]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
dat[,activitycol]
levels(dat[,activitycol])
names(dat)[length(dat) - 1] <- "activityName"
names(dat)[length(dat)] <- "subject"
# 4
# Assign names of variables.
names(dat)[-length(dat)] <- grep("mean|std", colname$V2, value = TRUE)
# Replace t & f in the first character.
names(dat) <- sub("^t", "time-", names(dat))
names(dat) <- sub("^f", "freq-", names(dat))
# Remove Brackets.
names(dat) <- sub("\\(\\)", "", names(dat))
names(dat)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
dat[,activitycol] <- as.factor(dat[,activitycol])
levels(dat[,activitycol]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
# 4
# Assign names of variables.
names(dat)[-length(dat)] <- grep("mean|std", colname$V2, value = TRUE)
# Replace t & f in the first character.
names(dat) <- sub("^t", "time-", names(dat))
dat <- rbind(train, test)
# 2
# Get mean and std columns.
colname <- read.table("./data/features.txt")
meanstdcol <- grep("mean|std", colname$V2)
dat <- dat[, c(meanstdcol,  (ncol(dat) - 1), ncol(dat))]
# 3
# Name activities. (col:80)
activitycol <- ncol(dat) - 1
dat[,activitycol] <- as.factor(dat[,activitycol])
levels(dat[,activitycol]) <- as.factor(c("WALKING","WALKING_UPSTAIRS","WALKING_DOWNSTAIRS","SITTING","STANDING","LAYING"))
# 4
# Assign names of variables.
names(dat)[1:(length(dat) - 2)] <- grep("mean|std", colname$V2, value = TRUE)
# Replace t & f in the first character.
names(dat) <- sub("^t", "time-", names(dat))
names(dat) <- sub("^f", "freq-", names(dat))
# Remove Brackets.
names(dat) <- sub("\\(\\)", "", names(dat))
names(dat)[activitycol] <- "activityName"
names(dat)[length(dat)] <- "subject"
names(dat)
levels(dat$activityName)
unique(dat$subject)
# 5
str(dat)
tail(dat$activityName
)
tapply(dat[, 1:(length(dat)-2)], dat$activitycol, colMeans)
tapply(dat[, 1:(ncol(dat)-2)], dat$activitycol, colMeans)
tapply(dat, dat$activitycol, colMeans)
tapply(dat$time-BodyAcc-mean-X, dat$activitycol, colMeans)
tapply(dat$time-BodyAcc-mean-X, dat$activitycol, mean)
tapply(dat$time-BodyAcc-mean-X, dat$activitycol, mean)
# 5
str(dat)
tapply(dat$`time-BodyAcc-mean-X`, dat$activitycol, mean)
tapply(dat$`time-BodyAcc-mean-X`, dat$activityName, mean)
tapply(dat, dat$activityName, mean)
dat[, -2]
tapply(dat[, 1:2], dat$activityName, mean)
library(dplyr)
dat <- group_by(dat, activityName)
summarize(dat, mean)
summarize_all(dat, mean)
summarize_all(dat, mean, na.rm=TRUE)
dat <- group_by(dat, activityName, subject)
summarize_all(dat, mean, na.rm=TRUE)
newdat <- summarize_all(dat, mean, na.rm=TRUE)
newdat
View(newdat)
str(newdat)
nrow(newdat)
dim(newdat)
write.csv(newdat, "tidydata.csv")
write.csv(newdat, "./data/tidydata.csv")
write.csv(newdat, "tidydata.csv")
